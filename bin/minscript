#!/usr/bin/env coffee

vm      = require 'vm'
fs      = require 'fs'
util    = require 'util'
readline = require 'readline'

parser  = require '../lib/parser'
emitter = require '../lib/emitter'
wrapper = require '../lib/wrapper'

ctx = vm.createContext()
ctx['console'] = console;

compile = (source)->
  code = fs.readFileSync(source).toString()
  ast  = parser.parse(code)

  namespace = ast.filter((s)-> s[0] is 'ns')[0]
  throw "Missing namespace declaration" unless namespace

  cleanAst = ast.filter (s)-> s[0] isnt 'ns'
  gen = emitter.init("exports")
  js  = wrapper.wrap namespace[1], gen.emit(cleanAst)

  console.log js

repl = ->
  replEmitter = emitter.init()

  rl = readline.createInterface
    input: process.stdin
    output: process.stdout

  rl.setPrompt('MinScript > ')
  rl.prompt()

  rl.on 'line', (line)->
    ast = parser.parse(line)
    console.log ast
    js = replEmitter.emit(ast).join(";")
    console.log js
    console.log "=>", vm.runInContext(js, ctx)
    rl.prompt()

switch process.argv[2]
  when 'repl'
    repl()
  when 'compile'
    compile(process.argv[3])
  else
    repl()
